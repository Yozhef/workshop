when@dev:
    monolog:
        handlers:
            main:
                type: stream
                path: "%kernel.logs_dir%/%kernel.environment%.log"
                level: info
            console:
                type: console
                process_psr_3_messages: false
                channels: [ "!event", "!doctrine", "!console" ]
            stdout:
                type: stream
                path: /dev/null
                level: info
                channels: [ "!nelmio_api_doc" ]
            stderr:
                type: stream
                path: "php://stderr"
                level: info

when@test:
    monolog:
        handlers:
            main:
                type: stream
                path: "%kernel.logs_dir%/%kernel.environment%.log"
                level: error
            console:
                type: console
                path: "%kernel.logs_dir%/%kernel.environment%.log"
                process_psr_3_messages: false
                level: error
                channels: ["!event", "!doctrine", "!console"]
            stdout:
                type: stream
                path: /dev/null
                level: error
                channels: [ "!nelmio_api_doc" ]
            stderr:
                type: stream
                path: "php://stderr"
                level: error

when@prod:
    monolog:
        handlers:
            sentry:
                type: sentry
                level: '%app.log_level%'
                hub_id: Sentry\State\HubInterface
            main:
                type: stream
                handler: stderr
                level: '%app.log_level%'
                formatter: monolog.formatter.json
                channels: [ "!event" ]
            console:
                type: console
                process_psr_3_messages: false
                level: '%app.log_level%'
                path: 'php://stdout'
                channels: ["!event", "!doctrine"]
            fingers_crossed:
                type: fingers_crossed
                action_level: warning
                handler: stderr
                path: 'php://stderr'
                excluded_http_codes: [ 404, 405 ]
                buffer_size: 50 # How many messages should be saved? Prevent memory leaks
                level: '%app.log_level%'
            stderr:
                type: stream
                path: 'php://stderr'
                level: '%app.log_level%'
                formatter: monolog.formatter.json
